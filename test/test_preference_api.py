# coding: utf-8

"""
    Frontier Administration API

    The Frontier APIs adhere to the OpenAPI specification, also known as Swagger, which provides a standardized approach for designing, documenting, and consuming RESTful APIs. With OpenAPI, you gain a clear understanding of the API endpoints, request/response structures, and authentication mechanisms supported by the Frontier APIs. By leveraging the OpenAPI specification, developers can easily explore and interact with the Frontier APIs using a variety of tools and libraries. The OpenAPI specification enables automatic code generation, interactive API documentation, and seamless integration with API testing frameworks, making it easier than ever to integrate Frontier into your existing applications and workflows.

    The version of the OpenAPI document: 0.2.0
    Contact: hello@raystack.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from frontier_api.api.preference_api import PreferenceApi  # noqa: E501


class TestPreferenceApi(unittest.TestCase):
    """PreferenceApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PreferenceApi()  # noqa: E501

    def tearDown(self) -> None:
        pass

    def test_admin_service_create_preferences(self) -> None:
        """Test case for admin_service_create_preferences

        Create platform preferences  # noqa: E501
        """
        pass

    def test_admin_service_list_preferences(self) -> None:
        """Test case for admin_service_list_preferences

        List platform preferences  # noqa: E501
        """
        pass

    def test_frontier_service_create_current_user_preferences(self) -> None:
        """Test case for frontier_service_create_current_user_preferences

        Create current user preferences  # noqa: E501
        """
        pass

    def test_frontier_service_create_group_preferences(self) -> None:
        """Test case for frontier_service_create_group_preferences

        Create group preferences  # noqa: E501
        """
        pass

    def test_frontier_service_create_organization_preferences(self) -> None:
        """Test case for frontier_service_create_organization_preferences

        Create organization preferences  # noqa: E501
        """
        pass

    def test_frontier_service_create_project_preferences(self) -> None:
        """Test case for frontier_service_create_project_preferences

        Create project preferences  # noqa: E501
        """
        pass

    def test_frontier_service_create_user_preferences(self) -> None:
        """Test case for frontier_service_create_user_preferences

        Create user preferences  # noqa: E501
        """
        pass

    def test_frontier_service_describe_preferences(self) -> None:
        """Test case for frontier_service_describe_preferences

        Describe preferences  # noqa: E501
        """
        pass

    def test_frontier_service_list_current_user_preferences(self) -> None:
        """Test case for frontier_service_list_current_user_preferences

        List current user preferences  # noqa: E501
        """
        pass

    def test_frontier_service_list_group_preferences(self) -> None:
        """Test case for frontier_service_list_group_preferences

        List group preferences  # noqa: E501
        """
        pass

    def test_frontier_service_list_organization_preferences(self) -> None:
        """Test case for frontier_service_list_organization_preferences

        List organization preferences  # noqa: E501
        """
        pass

    def test_frontier_service_list_project_preferences(self) -> None:
        """Test case for frontier_service_list_project_preferences

        List project preferences  # noqa: E501
        """
        pass

    def test_frontier_service_list_user_preferences(self) -> None:
        """Test case for frontier_service_list_user_preferences

        List user preferences  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
